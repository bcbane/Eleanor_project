{"ast":null,"code":"/**\r\n *\r\n * @param {any} value\r\n * @param {string} type\r\n * @throws {?TypeError}\r\n */\nconst assert = (value, type) => {\n  const valueType = typeof value;\n\n  if (type === \"object\") {\n    if (Array.isArray(value)) {\n      throw new TypeError(`Expected \"object\" but \"array\" was received`);\n    } else if (value === null) {\n      throw new TypeError(`Expected \"object\" but \"null\" was received`);\n    } else if (valueType !== type) {\n      throw new TypeError(`Expected \"${type}\" but \"${valueType}\" was received`);\n    }\n  } else if (type === \"array\") {\n    if (!Array.isArray(value)) {\n      throw new TypeError(`Expected \"array\" but \"${valueType}\" was received`);\n    }\n  } else if (type === \"null\") {\n    if (value !== null) {\n      throw new TypeError(`Expected \"null\" but \"${valueType}\" was received`);\n    }\n  } else if (valueType !== type) {\n    throw new TypeError(`Expected \"${type}\" but \"${valueType}\" was received`);\n  }\n};\n\nconst classNames = (...arr) => arr.filter(Boolean).join(\" \");\n/* input a number, usually a hash and convert it to base-52 */\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\r\n * counterparts */\n// Source: https://github.com/garycourt/murmurhash-js/blob/1e3186c42c2dac3738f53a70b0941276a0fdc46a/murmurhash2_gc.js\n\n\nfunction murmurhash(c) {\n  for (var e = c.length | 0, a = e | 0, d = 0, b; e >= 4;) {\n    b = c.charCodeAt(d) & 255 | (c.charCodeAt(++d) & 255) << 8 | (c.charCodeAt(++d) & 255) << 16 | (c.charCodeAt(++d) & 255) << 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), b ^= b >>> 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16) ^ b, e -= 4, ++d;\n  }\n\n  switch (e) {\n    case 3:\n      a ^= (c.charCodeAt(d + 2) & 255) << 16;\n\n    case 2:\n      a ^= (c.charCodeAt(d + 1) & 255) << 8;\n\n    case 1:\n      a ^= c.charCodeAt(d) & 255, a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);\n  }\n\n  a ^= a >>> 13;\n  a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);\n  return (a ^ a >>> 15) >>> 0;\n} // Source: https://github.com/styled-components/styled-components/blob/0ecbb475fd370a83a91bd42591ebff395de10acd/src/utils/generateAlphabeticName.js\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\r\n * counterparts */\n\n\nconst charsLength = 52;\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\n\nconst getAlphabeticChar = code => String.fromCharCode(code + (code > 25 ? 39 : 97));\n/* input a number, usually a hash and convert it to base-52 */\n\n\nfunction generateAlphabeticName(code) {\n  let name = \"\";\n  let x;\n  /* get a char and divide by alphabet-length */\n\n  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return getAlphabeticChar(x % charsLength) + name;\n}\n\nconst hashCode = str => generateAlphabeticName(murmurhash(str));\n/**\r\n * @param {string} hash\r\n * @param {HTMLElement} target\r\n * @param {IScrollToOptions} [options={}]\r\n * @return {void}\r\n */\n\n\nconst scrollTo = (hash, target, options = {}) => {\n  if (!options.noHash) {\n    window.location.hash = hash;\n  }\n\n  const el = document.getElementById(hash);\n\n  if (!options.noFocus) {\n    target.focus();\n  } // Attempted to implement smooth scrolling if the page changes by one position.\n  // The page jumps in several state changes\n  // @todo Fix unless a browser bug exists.\n  // const index = parseInt(hash.split(\"/\").reverse()[0], 10) - 1;\n  // const diff = Math.abs(index - page);\n  // document.documentElement.style[\"scroll-behavior\"] = diff > 1 ? \"auto\" : \"smooth\";\n\n\n  el.scrollIntoView(true); // Optionally if Element.scrollIntoView does not return the expected result.\n  // const {top: tEl} = el.getBoundingClientRect();\n  // const {top: tBody} = document.body.getBoundingClientRect();\n  // const offset = tEl - tBody;\n  // window.scrollTo(0, offset);\n};\n\nconst throttle = (callback, wait, options = {}) => {\n  let context, args, result;\n  let timeout = null;\n  let previous = 0;\n\n  const later = function () {\n    previous = options.leading === false ? 0 : Date.now();\n    timeout = null;\n    result = callback.apply(context, args);\n\n    if (!timeout) {\n      context = args = null;\n    }\n  };\n\n  return function () {\n    const now = Date.now();\n    if (!previous && options.leading === false) previous = now;\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n      result = callback.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n};\n\nexport { assert, classNames, hashCode, scrollTo, throttle };","map":{"version":3,"sources":["/Users/owner-mac/CODE/eleanor/eleanor/node_modules/@stickyroll/utils/dist/esm/index.js"],"names":["assert","value","type","valueType","Array","isArray","TypeError","classNames","arr","filter","Boolean","join","murmurhash","c","e","length","a","d","b","charCodeAt","charsLength","getAlphabeticChar","code","String","fromCharCode","generateAlphabeticName","name","x","Math","floor","hashCode","str","scrollTo","hash","target","options","noHash","window","location","el","document","getElementById","noFocus","focus","scrollIntoView","throttle","callback","wait","context","args","result","timeout","previous","later","leading","Date","now","apply","remaining","arguments","clearTimeout","trailing","setTimeout"],"mappings":"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","sourcesContent":["/**\r\n *\r\n * @param {any} value\r\n * @param {string} type\r\n * @throws {?TypeError}\r\n */\r\nconst assert = (value, type) => {\r\n    const valueType = typeof value;\r\n    if (type === \"object\") {\r\n        if (Array.isArray(value)) {\r\n            throw new TypeError(`Expected \"object\" but \"array\" was received`);\r\n        }\r\n        else if (value === null) {\r\n            throw new TypeError(`Expected \"object\" but \"null\" was received`);\r\n        }\r\n        else if (valueType !== type) {\r\n            throw new TypeError(`Expected \"${type}\" but \"${valueType}\" was received`);\r\n        }\r\n    }\r\n    else if (type === \"array\") {\r\n        if (!Array.isArray(value)) {\r\n            throw new TypeError(`Expected \"array\" but \"${valueType}\" was received`);\r\n        }\r\n    }\r\n    else if (type === \"null\") {\r\n        if (value !== null) {\r\n            throw new TypeError(`Expected \"null\" but \"${valueType}\" was received`);\r\n        }\r\n    }\r\n    else if (valueType !== type) {\r\n        throw new TypeError(`Expected \"${type}\" but \"${valueType}\" was received`);\r\n    }\r\n};\n\nconst classNames = (...arr) => arr.filter(Boolean).join(\" \");\n\n/* input a number, usually a hash and convert it to base-52 */\r\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\r\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\r\n * counterparts */\r\n// Source: https://github.com/garycourt/murmurhash-js/blob/1e3186c42c2dac3738f53a70b0941276a0fdc46a/murmurhash2_gc.js\r\nfunction murmurhash(c) {\r\n    for (var e = c.length | 0, a = e | 0, d = 0, b; e >= 4;) {\r\n        (b =\r\n            (c.charCodeAt(d) & 255) |\r\n                ((c.charCodeAt(++d) & 255) << 8) |\r\n                ((c.charCodeAt(++d) & 255) << 16) |\r\n                ((c.charCodeAt(++d) & 255) << 24)),\r\n            (b = 1540483477 * (b & 65535) + (((1540483477 * (b >>> 16)) & 65535) << 16)),\r\n            (b ^= b >>> 24),\r\n            (b = 1540483477 * (b & 65535) + (((1540483477 * (b >>> 16)) & 65535) << 16)),\r\n            (a = (1540483477 * (a & 65535) + (((1540483477 * (a >>> 16)) & 65535) << 16)) ^ b),\r\n            (e -= 4),\r\n            ++d;\r\n    }\r\n    switch (e) {\r\n        case 3:\r\n            a ^= (c.charCodeAt(d + 2) & 255) << 16;\r\n        case 2:\r\n            a ^= (c.charCodeAt(d + 1) & 255) << 8;\r\n        case 1:\r\n            (a ^= c.charCodeAt(d) & 255),\r\n                (a = 1540483477 * (a & 65535) + (((1540483477 * (a >>> 16)) & 65535) << 16));\r\n    }\r\n    a ^= a >>> 13;\r\n    a = 1540483477 * (a & 65535) + (((1540483477 * (a >>> 16)) & 65535) << 16);\r\n    return (a ^ (a >>> 15)) >>> 0;\r\n}\r\n// Source: https://github.com/styled-components/styled-components/blob/0ecbb475fd370a83a91bd42591ebff395de10acd/src/utils/generateAlphabeticName.js\r\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\r\n * counterparts */\r\nconst charsLength = 52;\r\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\r\nconst getAlphabeticChar = (code) => String.fromCharCode(code + (code > 25 ? 39 : 97));\r\n/* input a number, usually a hash and convert it to base-52 */\r\nfunction generateAlphabeticName(code) {\r\n    let name = \"\";\r\n    let x;\r\n    /* get a char and divide by alphabet-length */\r\n    for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {\r\n        name = getAlphabeticChar(x % charsLength) + name;\r\n    }\r\n    return getAlphabeticChar(x % charsLength) + name;\r\n}\r\nconst hashCode = (str) => generateAlphabeticName(murmurhash(str));\n\n/**\r\n * @param {string} hash\r\n * @param {HTMLElement} target\r\n * @param {IScrollToOptions} [options={}]\r\n * @return {void}\r\n */\r\nconst scrollTo = (hash, target, options = {}) => {\r\n    if (!options.noHash) {\r\n        window.location.hash = hash;\r\n    }\r\n    const el = document.getElementById(hash);\r\n    if (!options.noFocus) {\r\n        target.focus();\r\n    }\r\n    // Attempted to implement smooth scrolling if the page changes by one position.\r\n    // The page jumps in several state changes\r\n    // @todo Fix unless a browser bug exists.\r\n    // const index = parseInt(hash.split(\"/\").reverse()[0], 10) - 1;\r\n    // const diff = Math.abs(index - page);\r\n    // document.documentElement.style[\"scroll-behavior\"] = diff > 1 ? \"auto\" : \"smooth\";\r\n    el.scrollIntoView(true);\r\n    // Optionally if Element.scrollIntoView does not return the expected result.\r\n    // const {top: tEl} = el.getBoundingClientRect();\r\n    // const {top: tBody} = document.body.getBoundingClientRect();\r\n    // const offset = tEl - tBody;\r\n    // window.scrollTo(0, offset);\r\n};\n\nconst throttle = (callback, wait, options = {}) => {\r\n    let context, args, result;\r\n    let timeout = null;\r\n    let previous = 0;\r\n    const later = function () {\r\n        previous = options.leading === false ? 0 : Date.now();\r\n        timeout = null;\r\n        result = callback.apply(context, args);\r\n        if (!timeout) {\r\n            context = args = null;\r\n        }\r\n    };\r\n    return function () {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false)\r\n            previous = now;\r\n        const remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            result = callback.apply(context, args);\r\n            if (!timeout)\r\n                context = args = null;\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n};\n\nexport { assert, classNames, hashCode, scrollTo, throttle };\n"]},"metadata":{},"sourceType":"module"}